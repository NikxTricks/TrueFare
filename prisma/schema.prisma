generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID       Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  location     Json?
  disabled     Boolean       @default(false)
  driverStatus DriverStatus?
  isDriver     Boolean       @default(false)
  isSubscribed Boolean       @default(false)
  phone        String?
  tripsDriver  Trip[]        @relation("DriverTrips")
  tripsRider   Trip[]        @relation("RiderTrips")
}

model Trip {
  id          Int        @id @default(autoincrement())
  status      TripStatus @default(Pending)
  source      Json?
  destination Json?
  riderID     Int?
  driverID    Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Payment     Payment?
  Driver      User?      @relation("DriverTrips", fields: [driverID], references: [userID])
  Rider       User?      @relation("RiderTrips", fields: [riderID], references: [userID])
}

model Payment {
  id        Int           @id @default(autoincrement())
  method    PaymentMethod
  amount    Float
  tripID    Int           @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Trip      Trip          @relation(fields: [tripID], references: [id])
}

enum DriverStatus {
  Active
  Inactive
}

enum PaymentMethod {
  Cash
  Card
  UPI
}

enum TripStatus {
  Pending
  Ongoing
  Completed
  Canceled
}
